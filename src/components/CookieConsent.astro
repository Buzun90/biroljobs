---
---

<div id="cookie-consent" class="cookie-banner">
    <div class="cookie-content">
        <div class="cookie-text">
            <h3>Cookie Voorkeuren</h3>
            <p>
                Deze website gebruikt cookies om uw ervaring te verbeteren. Sommige cookies zijn noodzakelijk voor het functioneren van de website, 
                terwijl andere worden gebruikt voor analyse en marketing doeleinden.
            </p>
        </div>
        <div class="cookie-buttons">
            <button id="accept-all" class="cookie-button accept-all">Alles accepteren</button>
            <button id="accept-necessary" class="cookie-button accept-necessary">Alleen noodzakelijk</button>
            <button id="cookie-settings" class="cookie-button settings">Voorkeuren</button>
        </div>
    </div>
</div>

<div id="cookie-settings-modal" class="cookie-modal">
    <div class="modal-content">
        <h3>Cookie Instellingen</h3>
        <div class="cookie-options">
            <div class="cookie-option">
                <label>
                    <input type="checkbox" id="necessary" checked disabled>
                    Noodzakelijke cookies
                </label>
                <p>Deze cookies zijn essentieel voor het functioneren van de website.</p>
            </div>
            <div class="cookie-option">
                <label>
                    <input type="checkbox" id="analytics">
                    Analytics cookies
                </label>
                <p>Helpen ons te begrijpen hoe bezoekers onze website gebruiken.</p>
            </div>
            <div class="cookie-option">
                <label>
                    <input type="checkbox" id="marketing">
                    Marketing cookies
                </label>
                <p>Voor gepersonaliseerde advertenties.</p>
            </div>
        </div>
        <div class="modal-buttons">
            <button id="save-preferences" class="cookie-button">Opslaan</button>
        </div>
    </div>
</div>

<style>
.cookie-banner {
    display: none;
    position: fixed;
    bottom: 0;
    left: 0;
    width: 100%;
    background: #fff;
    box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.1);
    padding: 20px;
    z-index: 1000;
}

.cookie-banner.show {
    display: block;
}

.cookie-content {
    max-width: 1200px;
    margin: 0 auto;
}

.cookie-text {
    margin-bottom: 20px;
}

.cookie-buttons {
    display: flex;
    gap: 10px;
    flex-wrap: wrap;
}

.cookie-button {
    padding: 10px 20px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    background: #4CAF50;
    color: white;
}

.accept-necessary {
    background: #f0f0f0;
    color: #333;
}

.settings {
    background: #2196F3;
}

.cookie-modal {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    z-index: 1001;
}

.cookie-modal.show {
    display: flex;
    align-items: center;
    justify-content: center;
}

.modal-content {
    background: white;
    padding: 30px;
    border-radius: 10px;
    max-width: 500px;
    width: 90%;
}

.cookie-option {
    margin-bottom: 20px;
}

@media (max-width: 768px) {
    .cookie-buttons {
        flex-direction: column;
    }
    .cookie-button {
        width: 100%;
    }
}
</style>

<script is:inline>
document.addEventListener('DOMContentLoaded', function() {
    const banner = document.getElementById('cookie-consent');
    const modal = document.getElementById('cookie-settings-modal');
    const acceptAllBtn = document.getElementById('accept-all');
    const acceptNecessaryBtn = document.getElementById('accept-necessary');
    const settingsBtn = document.getElementById('cookie-settings');
    const savePreferencesBtn = document.getElementById('save-preferences');
    
    // Show banner if no consent is stored
    const hasConsent = localStorage.getItem('cookieConsent');
    if (!hasConsent) {
        banner.classList.add('show');
    }

    // Function to update GTM consent state
    function updateConsentState(analytics = false, marketing = false) {
        gtag('consent', 'update', {
            'analytics_storage': analytics ? 'granted' : 'denied',
            'ad_storage': marketing ? 'granted' : 'denied',
            'ad_user_data': marketing ? 'granted' : 'denied',
            'ad_personalization': marketing ? 'granted' : 'denied'
        });
        
        // Store consent in localStorage
        localStorage.setItem('cookieConsent', JSON.stringify({
            necessary: true,
            analytics: analytics,
            marketing: marketing,
            timestamp: new Date().toISOString()
        }));
    }

    // Accept all cookies
    acceptAllBtn.addEventListener('click', () => {
        updateConsentState(true, true);
        banner.classList.remove('show');
    });

    // Accept only necessary cookies
    acceptNecessaryBtn.addEventListener('click', () => {
        updateConsentState(false, false);
        banner.classList.remove('show');
    });

    // Open settings modal
    settingsBtn.addEventListener('click', () => {
        modal.style.display = 'block';
        
        // Load saved preferences
        const savedConsent = localStorage.getItem('cookieConsent');
        if (savedConsent) {
            const preferences = JSON.parse(savedConsent);
            document.getElementById('analytics').checked = preferences.analytics;
            document.getElementById('marketing').checked = preferences.marketing;
        }
    });

    // Save preferences
    savePreferencesBtn.addEventListener('click', () => {
        const analyticsConsent = document.getElementById('analytics').checked;
        const marketingConsent = document.getElementById('marketing').checked;
        
        updateConsentState(analyticsConsent, marketingConsent);
        
        modal.style.display = 'none';
        banner.classList.remove('show');
    });

    // Close modal when clicking outside
    window.addEventListener('click', (e) => {
        if (e.target === modal) {
            modal.style.display = 'none';
        }
    });

    // Load and apply saved consent on page load
    if (hasConsent) {
        const savedConsent = JSON.parse(hasConsent);
        updateConsentState(savedConsent.analytics, savedConsent.marketing);
    }
});
</script>
